# Generated by Django 3.2.10 on 2021-12-17 21:34

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations

from core_main_app.utils.databases.backend import uses_postgresql_backend


class Migration(migrations.Migration):

    dependencies = [
        ("core_main_app", "0002_site_update"),
    ]

    operations = [
        migrations.AddField(
            model_name="data",
            name="vector_column",
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AddIndex(
            model_name="data",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["vector_column"], name="core_main_a_vector__449df8_gin"
            ),
        ),
    ]
    if uses_postgresql_backend():
        operations.append(
            migrations.RunSQL(
                sql="""
                  CREATE TRIGGER vector_column_trigger
                  BEFORE INSERT OR UPDATE OF xml_file, vector_column
                  ON core_main_app_data
                  FOR EACH ROW EXECUTE PROCEDURE
                  tsvector_update_trigger(
                    vector_column, 'pg_catalog.english', xml_file
                  );

                  UPDATE core_main_app_data SET vector_column = NULL;
                """,
                reverse_sql="""
                  DROP TRIGGER IF EXISTS vector_column_trigger
                  ON core_main_app_data;
                """,
            )
        )
